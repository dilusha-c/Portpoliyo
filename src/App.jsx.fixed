import { useState, useEffect } from 'react'
import { motion, useScroll, useAnimation, AnimatePresence } from 'framer-motion'
import { TypeAnimation } from 'react-type-animation'
import { Sun, Moon, ArrowUp, Github, Linkedin, Mail, ExternalLink } from 'lucide-react'
import BootScreen from './components/BootScreen'
import './App.css'

function App() {
  const [theme, setTheme] = useState('dark')
  const [scrollY, setScrollY] = useState(0)
  const [showBootScreen, setShowBootScreen] = useState(false)
  const [portfolioVisible, setPortfolioVisible] = useState(false)
  const controls = useAnimation()
  const { scrollYProgress } = useScroll()
  
  // Check if it's first visit
  useEffect(() => {
    const hasVisited = localStorage.getItem('hasVisited');
    setShowBootScreen(!hasVisited);
    
    // If not first visit, show portfolio immediately
    if (hasVisited) {
      setPortfolioVisible(true);
    }
  }, []);

  // Theme toggle
  const toggleTheme = () => {
    const newTheme = theme === 'dark' ? 'light' : 'dark'
    setTheme(newTheme)
    document.documentElement.className = newTheme
  }

  // Detect scroll position for navbar transparency
  useEffect(() => {
    const handleScroll = () => {
      setScrollY(window.scrollY)
    }
    window.addEventListener('scroll', handleScroll)
    return () => window.removeEventListener('scroll', handleScroll)
  }, [])

  // Animate skills when they come into view
  useEffect(() => {
    const animateSkills = async () => {
      await controls.start({ opacity: 1, y: 0 })
    }
    animateSkills()
  }, [controls])

  // Scroll to top function
  const scrollToTop = () => {
    window.scrollTo({
      top: 0,
      behavior: 'smooth'
    })
  }

  const fadeInUp = {
    hidden: { opacity: 0, y: 20 },
    visible: { opacity: 1, y: 0 }
  }

  const stagger = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.2
      }
    }
  }

  const skills = [
    { name: "React", level: 90 },
    { name: "JavaScript", level: 85 },
    { name: "Node.js", level: 80 },
    { name: "Tailwind CSS", level: 90 },
    { name: "Python", level: 75 },
    { name: "AWS", level: 70 }
  ]

  const handleBootComplete = () => {
    setShowBootScreen(false);
    setPortfolioVisible(true);
  };
  
  return (
    <>
      {/* Boot screen for first-time visitors */}
      {showBootScreen && <BootScreen onComplete={handleBootComplete} />}
      
      {/* Portfolio content */}
      <AnimatePresence>
        {portfolioVisible && (
          <motion.div 
            className={`${theme === 'dark' ? 'bg-slate-900 text-white' : 'bg-white text-slate-900'} min-h-screen transition-colors duration-300`}
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ duration: 0.8 }}
          >
            {/* Progress bar */}
            <motion.div 
              className="fixed top-0 left-0 right-0 h-1 bg-gradient-to-r from-cyan-500 via-blue-500 to-purple-600 z-50"
              style={{ scaleX: scrollYProgress }}
            />

            {/* Navigation */}
            <motion.nav 
              className={`fixed w-full z-40 transition-all duration-300 ${
                scrollY > 10 
                  ? 'bg-white/10 dark:bg-slate-900/70 backdrop-blur-xl shadow-lg' 
                  : 'bg-transparent'
              }`}
              initial={{ opacity: 0, y: -20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.5 }}
            >
              <div className="container mx-auto flex justify-between items-center p-4">
                <motion.h1 
                  className="text-2xl font-bold bg-gradient-to-r from-cyan-500 to-blue-500 bg-clip-text text-transparent"
                  whileHover={{ scale: 1.05 }}
                >
                  Dilusha Chamika
                </motion.h1>
                <div className="hidden md:flex space-x-8">
                  {['Home', 'About', 'Projects', 'Publications', 'Certificates', 'Contact'].map((item) => (
                    <motion.a
                      key={item}
                      href={`#${item.toLowerCase()}`}
                      className="hover:text-cyan-400 transition-colors"
                      whileHover={{ scale: 1.1 }}
                      whileTap={{ scale: 0.95 }}
                    >
                      {item}
                    </motion.a>
                  ))}
                  <motion.a
                    href="/hologram-demo"
                    className="text-cyan-400 border border-cyan-400/30 px-3 py-1 rounded hover:bg-cyan-400/10 transition-colors"
                    whileHover={{ scale: 1.1 }}
                    whileTap={{ scale: 0.95 }}
                  >
                    Hologram Demo
                  </motion.a>
                </div>
                
                <motion.button
                  onClick={toggleTheme}
                  className={`p-2 rounded-full ${theme === 'dark' ? 'bg-slate-800' : 'bg-slate-200'} hover:scale-110 transition-all`}
                  whileHover={{ scale: 1.1 }}
                  whileTap={{ scale: 0.9 }}
                >
                  {theme === 'dark' ? <Sun size={20} /> : <Moon size={20} />}
                </motion.button>
              </div>
            </motion.nav>

            {/* Hero Section */}
            <section id="home" className="relative pt-32 pb-20 px-4 overflow-hidden">
              <div className="absolute inset-0 bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900 animate-gradient-x -z-10" />
              <div className="absolute inset-0 opacity-20">
                <div className="absolute inset-0 bg-[radial-gradient(ellipse_at_center,_var(--tw-gradient-stops))] from-blue-500/20 to-transparent rounded-full blur-3xl top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2"></div>
              </div>
              
              <motion.div 
                className="container mx-auto text-center z-10"
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8 }}
              >
                <motion.h2 
                  className="text-5xl md:text-7xl font-bold mb-4"
                  animate={{ 
                    textShadow: ["0 0 0px rgba(79, 209, 197, 0)", "0 0 20px rgba(79, 209, 197, 0.5)", "0 0 0px rgba(79, 209, 197, 0)"] 
                  }}
                  transition={{ duration: 3, repeat: Infinity }}
                >
                  Hello, I'm <span className="bg-gradient-to-r from-cyan-500 to-blue-500 bg-clip-text text-transparent">Dilusha Chamika</span>
                </motion.h2>
                <div className="text-xl md:text-2xl text-gray-300 mb-8 h-10">
                  <TypeAnimation
                    sequence={[
                      'Software Developer',
                      1000,
                      'AI Enthusiast',
                      1000,
                      'Drone Developer',
                      1000,
                    ]}
                    wrapper="span"
                    speed={50}
                    repeat={Infinity}
                  />
                </div>
                <div className="flex flex-wrap gap-4 justify-center">
                  <motion.button 
                    className="bg-gradient-to-r from-cyan-500 to-blue-500 text-white font-bold py-3 px-8 rounded-lg shadow-lg hover:shadow-cyan-500/50 transition-all"
                    whileHover={{ scale: 1.05, boxShadow: "0 0 15px rgba(34, 211, 238, 0.5)" }}
                    whileTap={{ scale: 0.95 }}
                  >
                    Download Resume
                  </motion.button>
                  <motion.button 
                    className="bg-white/10 backdrop-blur-md border border-white/20 text-white font-bold py-3 px-8 rounded-lg shadow-lg hover:bg-white/20 transition-all"
                    whileHover={{ scale: 1.05 }}
                    whileTap={{ scale: 0.95 }}
                  >
                    My Projects
                  </motion.button>
                </div>
                
                <motion.div 
                  className="absolute bottom-10 left-1/2 transform -translate-x-1/2"
                  animate={{ y: [0, 10, 0] }}
                  transition={{ duration: 1.5, repeat: Infinity }}
                >
                  <a href="#about" className="text-white/50 hover:text-white">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="animate-bounce"><path d="m6 9 6 6 6-6"></path></svg>
                  </a>
                </motion.div>
              </motion.div>
            </section>

            {/* About Section */}
            <section id="about" className={`py-20 px-4 ${theme === 'dark' ? 'bg-slate-800' : 'bg-slate-100'} transition-colors duration-300`}>
              <div className="container mx-auto">
                <motion.h2 
                  className="text-3xl font-bold mb-16 text-center bg-gradient-to-r from-cyan-500 to-blue-500 bg-clip-text text-transparent"
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  viewport={{ once: true }}
                  transition={{ duration: 0.5 }}
                >
                  About Me
                </motion.h2>
                <div className="flex flex-col md:flex-row items-center gap-10">
                  <motion.div 
                    className="md:w-1/3"
                    initial={{ opacity: 0, scale: 0.8 }}
                    whileInView={{ opacity: 1, scale: 1 }}
                    viewport={{ once: true }}
                    transition={{ duration: 0.5 }}
                  >
                    <motion.div 
                      className={`rounded-full w-64 h-64 mx-auto overflow-hidden border-4 ${theme === 'dark' ? 'border-cyan-500/30' : 'border-blue-500/30'} p-1`}
                      animate={{ rotate: [0, 5, 0, -5, 0] }}
                      transition={{ duration: 6, repeat: Infinity }}
                    >
                      <motion.div 
                        className="w-full h-full bg-gradient-to-br from-cyan-500 to-blue-600 rounded-full flex items-center justify-center text-4xl font-bold text-white animate-float"
                      >
                        DC
                      </motion.div>
                    </motion.div>
                  </motion.div>
                  <motion.div 
                    className="md:w-2/3"
                    initial={{ opacity: 0, x: 20 }}
                    whileInView={{ opacity: 1, x: 0 }}
                    viewport={{ once: true }}
                    transition={{ duration: 0.5, delay: 0.2 }}
                  >
                    <motion.p 
                      className={`${theme === 'dark' ? 'text-gray-300' : 'text-gray-700'} mb-4`}
                    >
                      I'm a passionate software developer with a strong foundation in full-stack development, AI, and drone technologies. 
                      I enjoy creating responsive, user-friendly interfaces that deliver exceptional user experiences while also working on 
                      cutting-edge solutions that push the boundaries of what's possible.
                    </motion.p>
                    <motion.p className={`${theme === 'dark' ? 'text-gray-300' : 'text-gray-700'} mb-6`}>
                      When I'm not coding, you can find me exploring new technologies, contributing to open source projects, 
                      or flying drones to capture amazing aerial photography.
                    </motion.p>
                    
                    <div className="mb-8">
                      <h3 className="font-bold text-xl mb-4 text-primary-400">My Skills</h3>
                      <motion.div 
                        className="space-y-4"
                        variants={stagger}
                        initial="hidden"
                        whileInView="visible"
                        viewport={{ once: true }}
                      >
                        {skills.map((skill, index) => (
                          <motion.div key={index} variants={fadeInUp} className="mb-2">
                            <div className="flex justify-between mb-1">
                              <span className="font-medium">{skill.name}</span>
                              <span>{skill.level}%</span>
                            </div>
                            <div className={`w-full h-2 rounded-full ${theme === 'dark' ? 'bg-slate-700' : 'bg-slate-300'}`}>
                              <motion.div 
                                className="h-full rounded-full bg-gradient-to-r from-cyan-500 to-blue-500"
                                initial={{ width: 0 }}
                                whileInView={{ width: `${skill.level}%` }}
                                viewport={{ once: true }}
                                transition={{ duration: 1, delay: 0.2 * index }}
                              />
                            </div>
                          </motion.div>
                        ))}
                      </motion.div>
                    </div>
                    
                    <div className="flex flex-wrap gap-4">
                      <motion.a 
                        href="#"
                        className={`border-2 ${theme === 'dark' ? 'border-cyan-400 text-cyan-400 hover:bg-cyan-400' : 'border-blue-500 text-blue-500 hover:bg-blue-500'} hover:text-slate-900 font-bold py-2 px-6 rounded-lg transition-colors flex items-center gap-2`}
                        whileHover={{ scale: 1.05, boxShadow: "0 0 15px rgba(34, 211, 238, 0.3)" }}
                        whileTap={{ scale: 0.95 }}
                      >
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path><polyline points="7 10 12 15 17 10"></polyline><line x1="12" y1="15" x2="12" y2="3"></line></svg>
                        Download CV
                      </motion.a>
                      <motion.a 
                        href="#contact"
                        className={`${theme === 'dark' ? 'bg-slate-700 hover:bg-slate-600' : 'bg-slate-200 hover:bg-slate-300'} text-inherit font-bold py-2 px-6 rounded-lg transition-colors flex items-center gap-2`}
                        whileHover={{ scale: 1.05 }}
                        whileTap={{ scale: 0.95 }}
                      >
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path></svg>
                        Contact Me
                      </motion.a>
                    </div>
                  </motion.div>
                </div>
              </div>
            </section>
            
            {/* Projects Section */}
            <section id="projects" className={`py-20 px-4 ${theme === 'dark' ? 'bg-slate-900' : 'bg-white'} transition-colors duration-300`}>
              <div className="container mx-auto">
                <motion.h2 
                  className="text-3xl font-bold mb-16 text-center bg-gradient-to-r from-cyan-500 to-blue-500 bg-clip-text text-transparent"
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  viewport={{ once: true }}
                  transition={{ duration: 0.5 }}
                >
                  My Projects
                </motion.h2>
                
                <motion.div 
                  className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8"
                  variants={stagger}
                  initial="hidden"
                  whileInView="visible"
                  viewport={{ once: true }}
                >
                  {/* Project Cards */}
                  {[1, 2, 3].map((project, index) => (
                    <motion.div 
                      key={index}
                      variants={fadeInUp}
                      whileHover={{ 
                        scale: 1.03, 
                        rotate: 1,
                        boxShadow: theme === 'dark' 
                          ? '0 20px 25px -5px rgba(0, 0, 0, 0.5), 0 0 15px 0 rgba(34, 211, 238, 0.3)'
                          : '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 0 15px 0 rgba(34, 211, 238, 0.3)'
                      }}
                      className={`rounded-lg overflow-hidden shadow-lg transition-all ${
                        theme === 'dark' ? 'bg-slate-800' : 'bg-white border border-slate-200'
                      }`}
                    >
                      <div className="relative">
                        <div className={`h-48 ${theme === 'dark' ? 'bg-slate-700' : 'bg-slate-100'} flex items-center justify-center`}>
                          <p className={`${theme === 'dark' ? 'text-cyan-400' : 'text-blue-500'} font-bold text-xl`}>Project Image</p>
                        </div>
                        <div className="absolute inset-0 bg-gradient-to-t from-black/70 to-transparent opacity-0 hover:opacity-100 transition-opacity duration-300 flex items-end">
                          <div className="p-4 w-full">
                            <div className="flex gap-2 justify-end">
                              <motion.a 
                                href="#" 
                                className="bg-white/20 backdrop-blur-md p-2 rounded-full hover:bg-white/30"
                                whileHover={{ scale: 1.2, rotate: 5 }}
                              >
                                <ExternalLink size={16} className="text-white" />
                              </motion.a>
                              <motion.a 
                                href="#" 
                                className="bg-white/20 backdrop-blur-md p-2 rounded-full hover:bg-white/30"
                                whileHover={{ scale: 1.2, rotate: 5 }}
                              >
                                <Github size={16} className="text-white" />
                              </motion.a>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div className="p-6">
                        <h3 className="text-xl font-bold mb-2">Project Title</h3>
                        <p className={`${theme === 'dark' ? 'text-gray-300' : 'text-gray-600'} mb-4`}>
                          A short description of the project and the technologies used.
                        </p>
                        <div className="flex flex-wrap gap-2 mb-4">
                          <span className={`px-3 py-1 rounded-full text-sm ${theme === 'dark' ? 'bg-slate-700' : 'bg-slate-100'}`}>React</span>
                          <span className={`px-3 py-1 rounded-full text-sm ${theme === 'dark' ? 'bg-slate-700' : 'bg-slate-100'}`}>Tailwind</span>
                          <span className={`px-3 py-1 rounded-full text-sm ${theme === 'dark' ? 'bg-slate-700' : 'bg-slate-100'}`}>JavaScript</span>
                        </div>
                        <div className="flex gap-4">
                          <motion.a 
                            href="#" 
                            className={`text-sm ${theme === 'dark' ? 'text-cyan-400 hover:text-cyan-300' : 'text-blue-500 hover:text-blue-700'} flex items-center gap-1`}
                            whileHover={{ x: 5 }}
                          >
                            Live Demo <ExternalLink size={14} />
                          </motion.a>
                          <motion.a 
                            href="#" 
                            className={`text-sm ${theme === 'dark' ? 'text-cyan-400 hover:text-cyan-300' : 'text-blue-500 hover:text-blue-700'} flex items-center gap-1`}
                            whileHover={{ x: 5 }}
                          >
                            Source Code <Github size={14} />
                          </motion.a>
                        </div>
                      </div>
                    </motion.div>
                  ))}
                </motion.div>
              </div>
            </section>

            {/* Publications Section */}
            <section id="publications" className={`py-20 px-4 ${theme === 'dark' ? 'bg-slate-800' : 'bg-slate-100'} transition-colors duration-300`}>
              <div className="container mx-auto">
                <motion.h2 
                  className="text-3xl font-bold mb-16 text-center bg-gradient-to-r from-cyan-500 to-blue-500 bg-clip-text text-transparent"
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  viewport={{ once: true }}
                  transition={{ duration: 0.5 }}
                >
                  My Publications
                </motion.h2>
                
                <motion.div 
                  className="grid grid-cols-1 md:grid-cols-2 gap-8"
                  variants={stagger}
                  initial="hidden"
                  whileInView="visible"
                  viewport={{ once: true }}
                >
                  {/* Publication Items */}
                  {[
                    {
                      title: "Machine Learning Application in Health Informatics",
                      desc: "A comprehensive study on applying machine learning algorithms to improve patient outcomes through predictive analysis.",
                      journal: "Journal of Health Informatics, 2024"
                    },
                    {
                      title: "Sustainable Computing: Energy Optimization in Software Development",
                      desc: "Research on reducing energy consumption through efficient code practices and optimized algorithms.",
                      journal: "Green Computing Conference, 2023"
                    },
                    {
                      title: "Cybersecurity Frameworks for Modern Web Applications",
                      desc: "Analysis of security vulnerabilities in web applications and proposed frameworks to mitigate risks.",
                      journal: "International Journal of Web Security, 2022"
                    },
                    {
                      title: "Real-time Data Processing in IoT Networks",
                      desc: "Exploration of efficient data processing methods for IoT devices with limited computing resources.",
                      journal: "IoT Technologies Journal, 2021"
                    }
                  ].map((pub, index) => (
                    <motion.div 
                      key={index}
                      variants={fadeInUp}
                      whileHover={{ 
                        scale: 1.02,
                        boxShadow: theme === 'dark' 
                          ? '0 10px 15px -3px rgba(0, 0, 0, 0.3), 0 4px 6px -2px rgba(0, 0, 0, 0.1)'
                          : '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)'
                      }}
                      className={`p-6 rounded-lg shadow-md ${
                        theme === 'dark' ? 'bg-slate-900' : 'bg-white'
                      }`}
                    >
                      <h3 className={`text-xl font-bold mb-3 ${theme === 'dark' ? 'text-cyan-400' : 'text-blue-500'}`}>{pub.title}</h3>
                      <p className={`${theme === 'dark' ? 'text-gray-300' : 'text-gray-600'} mb-3`}>
                        {pub.desc}
                      </p>
                      <div className="flex justify-between items-center">
                        <span className={`text-sm ${theme === 'dark' ? 'text-gray-400' : 'text-gray-500'}`}>{pub.journal}</span>
                        <motion.a 
                          href="#" 
                          className={`text-sm ${theme === 'dark' ? 'text-cyan-400 hover:text-cyan-300' : 'text-blue-500 hover:text-blue-700'} flex items-center gap-1`}
                          whileHover={{ x: 5 }}
                        >
                          Read Paper
                          <svg xmlns="http://www.w3.org/2000/svg" className="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M14 5l7 7m0 0l-7 7m7-7H3" />
                          </svg>
                        </motion.a>
                      </div>
                    </motion.div>
                  ))}
                </motion.div>
              </div>
            </section>
            
            {/* Certificates Section */}
            <section id="certificates" className={`py-20 px-4 ${theme === 'dark' ? 'bg-slate-900' : 'bg-white'} transition-colors duration-300`}>
              <div className="container mx-auto">
                <motion.h2 
                  className="text-3xl font-bold mb-16 text-center bg-gradient-to-r from-cyan-500 to-blue-500 bg-clip-text text-transparent"
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  viewport={{ once: true }}
                  transition={{ duration: 0.5 }}
                >
                  Certifications
                </motion.h2>
                
                <motion.div 
                  className="grid grid-cols-1 md:grid-cols-3 gap-6"
                  variants={stagger}
                  initial="hidden"
                  whileInView="visible"
                  viewport={{ once: true }}
                >
                  {/* Certificate Items */}
                  {[
                    {
                      title: "AWS Certified Solutions Architect",
                      desc: "Advanced knowledge of AWS cloud architecture and best practices for designing secure and scalable systems.",
                      org: "Amazon Web Services",
                      year: "2023"
                    },
                    {
                      title: "Certified Kubernetes Administrator",
                      desc: "Expert-level knowledge in managing containerized applications using Kubernetes orchestration.",
                      org: "Cloud Native Computing Foundation",
                      year: "2022"
                    },
                    {
                      title: "Full-Stack Web Development",
                      desc: "Comprehensive training in frontend and backend technologies including React, Node.js, and database systems.",
                      org: "Udacity",
                      year: "2021"
                    },
                    {
                      title: "Machine Learning Specialist",
                      desc: "Advanced training in machine learning algorithms, data analysis, and AI implementation for practical applications.",
                      org: "Coursera (Stanford University)",
                      year: "2020"
                    },
                    {
                      title: "Certified Scrum Master",
                      desc: "Expertise in Agile methodologies and Scrum framework for effective project management and team leadership.",
                      org: "Scrum Alliance",
                      year: "2020"
                    },
                    {
                      title: "Cybersecurity Specialist",
                      desc: "Training in network security, threat detection, encryption techniques, and security best practices.",
                      org: "CompTIA",
                      year: "2019"
                    }
                  ].map((cert, index) => (
                    <motion.div 
                      key={index}
                      variants={fadeInUp}
                      whileHover={{ scale: 1.03, y: -5 }}
                      className={`p-6 rounded-lg shadow-md transition-all ${
                        theme === 'dark' 
                          ? 'bg-slate-800 border border-slate-700' 
                          : 'bg-white border border-slate-200'
                      }`}
                    >
                      <div className="flex items-center justify-between mb-4">
                        <h3 className="text-xl font-bold">{cert.title}</h3>
                        <motion.div 
                          className={`${
                            theme === 'dark' ? 'bg-cyan-500/20' : 'bg-blue-500/20'
                          } p-2 rounded-full`}
                          whileHover={{ rotate: 15 }}
                        >
                          <svg xmlns="http://www.w3.org/2000/svg" className={`h-6 w-6 ${theme === 'dark' ? 'text-cyan-400' : 'text-blue-500'}`} fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z" />
                          </svg>
                        </motion.div>
                      </div>
                      <p className={`${theme === 'dark' ? 'text-gray-300' : 'text-gray-600'} mb-3`}>{cert.desc}</p>
                      <div className="flex justify-between items-center text-sm">
                        <span className={`${theme === 'dark' ? 'text-gray-400' : 'text-gray-500'}`}>{cert.org}</span>
                        <span className={`${theme === 'dark' ? 'text-cyan-400' : 'text-blue-500'}`}>{cert.year}</span>
                      </div>
                    </motion.div>
                  ))}
                </motion.div>
              </div>
            </section>

            {/* Contact Section */}
            <section id="contact" className={`py-20 px-4 ${theme === 'dark' ? 'bg-slate-800' : 'bg-slate-100'} transition-colors duration-300`}>
              <div className="container mx-auto">
                <motion.h2 
                  className="text-3xl font-bold mb-16 text-center bg-gradient-to-r from-cyan-500 to-blue-500 bg-clip-text text-transparent"
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  viewport={{ once: true }}
                  transition={{ duration: 0.5 }}
                >
                  Contact Me
                </motion.h2>
                
                <div className="max-w-3xl mx-auto">
                  <motion.div 
                    className={`${
                      theme === 'dark' 
                        ? 'bg-slate-900' 
                        : 'bg-white'
                    } p-8 rounded-lg shadow-lg`}
                    initial={{ opacity: 0, y: 20 }}
                    whileInView={{ opacity: 1, y: 0 }}
                    viewport={{ once: true }}
                    transition={{ duration: 0.5 }}
                  >
                    <form className="space-y-6">
                      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div>
                          <label htmlFor="name" className={`block ${theme === 'dark' ? 'text-gray-300' : 'text-gray-700'} mb-2`}>Name</label>
                          <motion.input 
                            type="text" 
                            id="name" 
                            className={`w-full ${
                              theme === 'dark' 
                                ? 'bg-slate-800 border-slate-700 text-white' 
                                : 'bg-slate-50 border-slate-200 text-slate-900'
                            } border rounded-lg px-4 py-3 focus:outline-none focus:ring-2 ${
                              theme === 'dark' ? 'focus:ring-cyan-500' : 'focus:ring-blue-500'
                            }`}
                            placeholder="Your name" 
                            whileFocus={{ scale: 1.01 }}
                          />
                        </div>
                        <div>
                          <label htmlFor="email" className={`block ${theme === 'dark' ? 'text-gray-300' : 'text-gray-700'} mb-2`}>Email</label>
                          <motion.input 
                            type="email" 
                            id="email" 
                            className={`w-full ${
                              theme === 'dark' 
                                ? 'bg-slate-800 border-slate-700 text-white' 
                                : 'bg-slate-50 border-slate-200 text-slate-900'
                            } border rounded-lg px-4 py-3 focus:outline-none focus:ring-2 ${
                              theme === 'dark' ? 'focus:ring-cyan-500' : 'focus:ring-blue-500'
                            }`}
                            placeholder="your.email@example.com"
                            whileFocus={{ scale: 1.01 }}
                          />
                        </div>
                      </div>
                      
                      <div>
                        <label htmlFor="subject" className={`block ${theme === 'dark' ? 'text-gray-300' : 'text-gray-700'} mb-2`}>Subject</label>
                        <motion.input 
                          type="text" 
                          id="subject" 
                          className={`w-full ${
                            theme === 'dark' 
                              ? 'bg-slate-800 border-slate-700 text-white' 
                              : 'bg-slate-50 border-slate-200 text-slate-900'
                          } border rounded-lg px-4 py-3 focus:outline-none focus:ring-2 ${
                            theme === 'dark' ? 'focus:ring-cyan-500' : 'focus:ring-blue-500'
                          }`}
                          placeholder="Subject of your message"
                          whileFocus={{ scale: 1.01 }}
                        />
                      </div>
                      
                      <div>
                        <label htmlFor="message" className={`block ${theme === 'dark' ? 'text-gray-300' : 'text-gray-700'} mb-2`}>Message</label>
                        <motion.textarea 
                          id="message" 
                          rows="5" 
                          className={`w-full ${
                            theme === 'dark' 
                              ? 'bg-slate-800 border-slate-700 text-white' 
                              : 'bg-slate-50 border-slate-200 text-slate-900'
                          } border rounded-lg px-4 py-3 focus:outline-none focus:ring-2 ${
                            theme === 'dark' ? 'focus:ring-cyan-500' : 'focus:ring-blue-500'
                          }`}
                          placeholder="Your message here..."
                          whileFocus={{ scale: 1.01 }}
                        ></motion.textarea>
                      </div>
                      
                      <motion.button 
                        type="submit" 
                        className="w-full bg-gradient-to-r from-cyan-500 to-blue-500 text-white font-bold py-3 px-6 rounded-lg shadow-lg transition-all"
                        whileHover={{ scale: 1.02, boxShadow: "0 0 15px rgba(34, 211, 238, 0.5)" }}
                        whileTap={{ scale: 0.98 }}
                      >
                        Send Message
                      </motion.button>
                    </form>
                    
                    <div className="mt-10 pt-8 border-t border-slate-700">
                      <div className="flex flex-wrap justify-center gap-8">
                        <motion.a 
                          href="https://www.linkedin.com/in/dilusha-chamika/"
                          target="_blank"
                          rel="noopener noreferrer"
                          className={`flex items-center gap-2 ${
                            theme === 'dark' ? 'text-gray-300 hover:text-cyan-400' : 'text-gray-600 hover:text-blue-500'
                          } transition-colors`}
                          whileHover={{ scale: 1.1 }}
                          whileTap={{ scale: 0.9 }}
                        >
                          <Linkedin size={20} />
                          <span>LinkedIn</span>
                        </motion.a>
                        
                        <motion.a 
                          href="#"
                          target="_blank"
                          rel="noopener noreferrer"
                          className={`flex items-center gap-2 ${
                            theme === 'dark' ? 'text-gray-300 hover:text-cyan-400' : 'text-gray-600 hover:text-blue-500'
                          } transition-colors`}
                          whileHover={{ scale: 1.1 }}
                          whileTap={{ scale: 0.9 }}
                        >
                          <Github size={20} />
                          <span>GitHub</span>
                        </motion.a>
                        
                        <motion.a 
                          href="mailto:contact@example.com"
                          className={`flex items-center gap-2 ${
                            theme === 'dark' ? 'text-gray-300 hover:text-cyan-400' : 'text-gray-600 hover:text-blue-500'
                          } transition-colors`}
                          whileHover={{ scale: 1.1 }}
                          whileTap={{ scale: 0.9 }}
                        >
                          <Mail size={20} />
                          <span>Email</span>
                        </motion.a>
                      </div>
                    </div>
                  </motion.div>
                </div>
              </div>
            </section>

            {/* Footer */}
            <footer className={`${theme === 'dark' ? 'bg-slate-900 text-gray-400' : 'bg-white text-gray-600'} py-8 px-4 border-t ${theme === 'dark' ? 'border-slate-800' : 'border-slate-200'} transition-colors duration-300`}>
              <div className="container mx-auto flex flex-col md:flex-row justify-between items-center">
                <motion.p 
                  className="mb-4 md:mb-0"
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  transition={{ delay: 0.5, duration: 0.5 }}
                >
                  © 2025 Dilusha Chamika. All rights reserved.
                </motion.p>
                <div className="flex space-x-6">
                  <motion.a 
                    href="https://github.com/dilushacg" 
                    target="_blank" 
                    rel="noopener noreferrer" 
                    className={`${theme === 'dark' ? 'hover:text-cyan-400' : 'hover:text-blue-500'} transition-colors`}
                    whileHover={{ scale: 1.2, rotate: 5 }}
                  >
                    <Github size={20} />
                  </motion.a>
                  <motion.a 
                    href="https://www.linkedin.com/in/dilusha-chamika/" 
                    target="_blank" 
                    rel="noopener noreferrer" 
                    className={`${theme === 'dark' ? 'hover:text-cyan-400' : 'hover:text-blue-500'} transition-colors`}
                    whileHover={{ scale: 1.2, rotate: 5 }}
                  >
                    <Linkedin size={20} />
                  </motion.a>
                  <motion.a 
                    href="https://twitter.com/dilushacg" 
                    target="_blank" 
                    rel="noopener noreferrer" 
                    className={`${theme === 'dark' ? 'hover:text-cyan-400' : 'hover:text-blue-500'} transition-colors`}
                    whileHover={{ scale: 1.2, rotate: 5 }}
                  >
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><path d="M22 4s-.7 2.1-2 3.4c1.6 10-9.4 17.3-18 11.6 2.2.1 4.4-.6 6-2C3 15.5.5 9.6 3 5c2.2 2.6 5.6 4.1 9 4-.9-4.2 4-6.6 7-3.8 1.1 0 3-1.2 3-1.2z"></path></svg>
                  </motion.a>
                </div>
              </div>
            </footer>

            {/* Scroll to top button */}
            <motion.button
              onClick={scrollToTop}
              className={`fixed bottom-5 right-5 p-3 rounded-full ${theme === 'dark' ? 'bg-slate-800' : 'bg-white'} shadow-lg z-40 border ${theme === 'dark' ? 'border-slate-700' : 'border-slate-200'}`}
              initial={{ opacity: 0 }}
              animate={{ 
                opacity: scrollY > 300 ? 1 : 0,
                scale: scrollY > 300 ? 1 : 0
              }}
              transition={{ duration: 0.3 }}
              whileHover={{ scale: 1.1 }}
            >
              <ArrowUp size={20} className={theme === 'dark' ? 'text-cyan-400' : 'text-blue-500'} />
            </motion.button>
          </motion.div>
        )}
      </AnimatePresence>
    </>
  )
}

export default App
